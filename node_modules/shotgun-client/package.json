{
  "name": "shotgun-client",
  "version": "1.0.1",
  "description": "A client component for node-shotgun that enables realtime communication with shotgun on the web server.",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R tap"
  },
  "repository": "",
  "keywords": [
    "shotgun",
    "node-shotgun",
    "shell",
    "terminal",
    "shotgun-client"
  ],
  "author": {
    "name": "Alex Ford"
  },
  "license": "Apache",
  "dependencies": {
    "socket.io": "~0.9.13"
  },
  "peerDependencies": {
    "shotgun": "1.x"
  },
  "readme": "## shotgun-client\r\n\r\nshotgun-client is a plugin for [node-shotgun](https://github.com/Chevex/node-shotgun) that allows creation of real-time web consoles that communicate with the shotgun shell on the server.\r\n\r\n### Installation\r\n\r\n    npm install shotgun-client\r\n    \r\n### Usage\r\n\r\nUsing the client couldn't be easier. All it takes is some minor configuration on the server and a script reference on the client.\r\n\r\n**Simple Http Server:**\r\n\r\n    // /app.js\r\n    \r\n    // Create a simple http server.\r\n    var static = require('node-static'),\r\n        http = require('http'),\r\n        file = new(static.Server)('./public');\r\n    \r\n    // Start the server and do things as you normally would.\r\n    var server = http.createServer(function (req, res) {\r\n        req.addListener('end', function () {\r\n            file.serve(req, res);\r\n        });\r\n    }).listen(1337, '127.0.0.1');\r\n    \r\n    // Require shotgun and shotgun-client then create a new shell.\r\n    var shotgun = require('shotgun'),\r\n        shotgunClient = require('shotgun-client'),\r\n        shell = new shotgun.Shell();\r\n    \r\n    // Use shotgun-client to wire up the server and the shell.\r\n    shotgunClient.attach(server, shell);\r\n    \r\n    console.log('Server running at http://127.0.0.1:1337/');\r\n    \r\nIf you'd like to see an example of shotgun-client running in an [Express](http://expressjs.com/) app then check out [my example application](https://github.com/Chevex/shotgun-client-example).\r\n    \r\n**Client w/jQuery:**\r\n\r\n    <html>\r\n        <head>\r\n            <title>node-client demo</title>\r\n            <style type=\"text/css\">\r\n                body {\r\n                    color: #fff;\r\n                    background-color: #000;\r\n                    padding: 50px;\r\n                }\r\n            </style>\r\n            <script type=\"text/javascript\" src=\"/scripts/jquery.js\" />\r\n            <script type=\"text/javascript\" src=\"/shotgun/shotgun.client.js\" />\r\n            <script type=\"text/javascript\">\r\n                $(function () {\r\n                    $('body').shotgunConsole();\r\n                });\r\n            </script>\r\n        </head>\r\n        <body>\r\n        </body>\r\n    </html>\r\n\r\nThe included jQuery adapter is designed to get you up and running quickly. Just call `.shotgunConsole()` on any element and it will be instantly transformed into a simple console that communicates directly, in realtime with your shotgun shell on the server. This is more for the user who wants some sort of admin interface for their website.\r\n\r\nIf you need something more customized then you can forgo using the jQuery wrapper and use the client shell directly.\r\n\r\n**Client w/out jQuery**\r\n\r\n    <html>\r\n        <head>\r\n            <title>node-client demo</title>\r\n            <style type=\"text/css\">\r\n                body {\r\n                    color: #fff;\r\n                    background-color: #000;\r\n                    padding: 50px;\r\n                }\r\n            </style>\r\n            <script type=\"text/javascript\" src=\"/scripts/jquery.js\" />\r\n            <script type=\"text/javascript\" src=\"/shotgun/shotgun.client.js\" />\r\n            <script type=\"text/javascript\">\r\n                var client = new shotgun.Client();\r\n                client.execute('help', function (result) {\r\n                    console.log(result);\r\n                    // result is the exact same object returned by shell.execute() on the server.\r\n                });\r\n            </script>\r\n        </head>\r\n        <body>\r\n        </body>\r\n    </html>\r\n",
  "readmeFilename": "README.md",
  "_id": "shotgun-client@1.0.1",
  "_from": "shotgun-client@"
}
